# name: CI/CD Pipline

# on:
#     push:
#         branches:
#             - lytvynenko/deploy_cicd
#     pull_request:
#         branches:
#             - lytvynenko/deploy_cicd

# jobs:
#     lint:
#         runs-on: ubuntu-latest
#         steps:
#            - name: Checkout code
#              uses: actions/checkout@v3

#            - name: Set up Python
#              uses: actions/setup-python@v4
#              with:
#                  python-version: '3.11'
            
#            - name: Install dependencies
#              run: |
#                  python -m pip install --upgrade pip
#                  pip install flake8
            
#            - name: Run flake8
#              run: flake8 chat/ chatapp/ --exclude=migrations --max-line-length=120

#     test:
#         runs-on: ubuntu-latest
#         services:
#             redis:
#                 image: redis:latest
#                 ports:
#                     - 6379:6379
#         steps:
#            - name: Checkout code
#              uses: actions/checkout@v3

#            - name: Set up Python
#              uses: actions/setup-python@v4
#              with:
#                 python-version: '3.11'

#            - name: Check requirements.txt
#              run: |
#                 ls -la
#                 test -f requirements.txt || (echo "requirements.txt not found" && exit 1)

#            - name: Install dependencies
#              run: |
#                  python -m pip install --upgrade pip
#                  pip install -r requirements.txt

#            - name: Run migrations
#              run: python manage.py migrate
#              env:
#                 DJANGO_SETTINGS_MODULE: chatapp.settings

#            - name: Run tests
#              run: python manage.py test chat
#              env:
#                 DJANGO_SETTINGS_MODULE: chatapp.settings
#                 REDIS_HOST: redis
#     security:
#         runs-on: ubuntu-latest
#         steps:
#            - name: Checkout code
#              uses: actions/checkout@v3

#            - name: Set up Python
#              uses: actions/setup-python@v4
#              with:
#                  python-version: '3.11'
            
#            - name: Install Bandit
#              run: |
#                  python -m pip install --upgrade pip
#                  pip install bandit

#            - name: Run Bandit
#              run: bandit -r chat/ chatapp/ -f txt -o security_report.txt || true

#            - name: Upload security report
#              uses: actions/upload-artifact@v4
#              with:
#                 name: security-report
#                 path: security_report.txt
#                 retention-days: 7

#     deploy:
#         runs-on: ubuntu-latest
#         needs: [lint, test, security]
#         if: github.ref == 'refs/heads/lytvynenko/deploy_cicd' && github.event_name == 'push'
#         steps:
#            - name: Checkout code
#              uses: actions/checkout@v3

#            - name: Set up Docker Bildbox
#              uses: docker/setup-buildx-action@v3

#            - name: Login to DockerHub
#              uses: docker/login-action@v2
#              with:
#                 username: ${{ secrets.DOCKER_HUB_USERNAME }}
#                 password: ${{ secrets.DOCKER_HUB_PASSWORD }}
            
#            - name: Build and push Docker image
#              uses: docker/build-push-action@v4
#              with:
#                 context: .
#                 push: true
#                 tags: |
#                     ${{ secrets.DOCKER_HUB_USERNAME }}/chatapp:${{ github.sha }}
#                     ${{ secrets.DOCKER_HUB_USERNAME }}/chatapp:latest
#                 build-args: |
#                     BUILD_VERSION=${{ github.sha }}